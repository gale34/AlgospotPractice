1. 서로 친구인지를 2차원 배열로 표현. (일종의 무방향 그래프처럼 표현)
2. 재귀호출을 기반으로 작성
3. 짝이 지어진 커플이 있는 지 확인.
4. 짝이 없는 커플이 없다면(모두 짝이 있다면) 가능한 경우의수 +1하고 재귀호출을 종료해서 다른 경우의 수 탐색
5. 2번에서 확인할 때, 맨 처음 발견하는 솔로부터 짝 지어주기 시작.
6. 1번에서 만든 배열을 참고해서 5번의 솔로의 짝을 찾기 시작. 아직 짝이 없는 사람 중 5번 솔로와 친구인 사람을 짝 지어줌.
7. 재귀호출을 통해 그 다음 솔로의 짝 지정.
8. 재귀 호출이 끝나면 방금 짝지었던 커플을 해체해서 다른 경우의 수 탐색
9. 재귀호출이 모두 끝나면 가능한 경우의 수 출력

*. 중복되지 않고 빠짐없이 완전 탐색하는 경우를 찾기가 쉽지 않다..순서를 무시하게 되면 중복되는 경우가 많아질 수 있으니.. 
*. 재귀호출을 좀 더 깔끔하게 쓰는 연습을 해야겠다.