1. i번째부터 시작하는 부분증가수열을 생각할 때, i+1번째 부터 끝까지 i번째보다 큰 것만 고르고 시작.
2. 1번에서 고른 부분수열을 재귀호출로 해결.
3. i = 0 ~ n-1까지 1과 2 반복해서 최댓값 찾기
4. 3번에서 모든 부분수열을 탐색하므로 우려했던부분(중간에 자잘한 증가부분수열을 놓치는 부분)을 다 체크함.
-> 말하자면 가능한 모든 증가부분수열을 만들어 집어넣음

-> 다이나믹 프로그래밍
-> 모든 증가부분수열을 만들지 않고 각 인덱스마다 생성 가능한 증가부분수열의 최대 길이를 저장.
? 최대 증가부분수열의 길이만 반환하면 놓치는 부분이 있지 않을까?
-> 어차피 저장된 각 인덱스에서 시작된증가부분수열은 최댓값뿐...무조건 증가부분수열은 인덱스보다 큰 값들 뿐이다. 
   혹시 중간에 더 큰 증가 부분수열이 있다하더라도, 모든 인덱스를 체크하므로 관계없다.